Dans Bash, les opérateurs suivent généralement un ordre de priorité similaire à celui des mathématiques, mais il y a quelques différences importantes. Voici un ordre de priorité commun pour les opérateurs dans Bash, du plus haut au plus bas :

    1.Parenthèses (gauche et droite)
    2.Expansion de commandes (command substitution, expansion d'arobase, expansion de brace, etc.)
    3.Opérateurs logiques (NOT, AND, OR)
    4.Opérateurs de comparaison (égalité, inégalité, supériorité, infériorité, etc.)
    5.Opérateurs arithmétiques (addition, soustraction, multiplication, division, modulo)
    6.Assignation d'une variable
    7.Pipe ( | )
    8.Redirection ( >, >>, < )
    9.Séparateur de commande ( ;, &, &&, || )

Il est important de noter que l'ordre de priorité peut varier en fonction du contexte et des options spécifiées. Par exemple, l'utilisation de parenthèses peut modifier considérablement l'ordre d'exécution des opérations dans une expression, tout comme l'utilisation des opérateurs logiques et de comparaison. Les options spécifiées dans les commandes peuvent également affecter l'ordre de priorité des opérateurs.

En fin de compte, il est important de comprendre comment fonctionne l'ordre de priorité dans votre propre shell et de s'assurer que les opérateurs sont évalués dans le bon ordre pour garantir une évaluation précise des expressions saisies.



    Le symbole '$' est utilisé pour représenter le prompt ou l'invite de commande dans le shell Bash.
    Il est également utilisé pour définir ou accéder à une variable d'environnement en utilisant la syntaxe $NOM_DE_LA_VARIABLE.

    Le symbole '@' est utilisé pour représenter tous les arguments passés à un script ou une commande. Il est souvent utilisé pour itérer sur tous les arguments passés en utilisant la syntaxe "$@".

    Le symbole '/' est utilisé pour séparer les éléments dans les chemins de fichiers et de répertoires dans le système de fichiers Unix. Il est également utilisé pour démarrer ou terminer une expression régulière en utilisant la syntaxe /EXPRESSION_REGULIERE/.





    Les guillemets et les apostrophes : Tout d'abord, le shell prend en compte les guillemets doubles 
    ("...") et les apostrophes simples ('...') pour interpréter les chaînes de caractères spéciales. 
    Tous les caractères entre guillemets doubles sont traités comme un seul argument, tandis que les 
    caractères entre apostrophes simples sont traités littéralement.

    Les redirections d'entrée et de sortie : Ensuite, le shell traite les redirections d'entrée et de sortie. 
    Les opérateurs "<", "<<", ">", et ">>" permettent de rediriger l'entrée ou la sortie d'une commande 
    vers un fichier ou un autre flux.

    Les pipes : Ensuite, le shell traite les pipes (|), qui permettent de rediriger la sortie d'une 
    commande vers l'entrée d'une autre commande.

    Les mots : Enfin, le shell traite les mots de la commande. Les mots sont des chaînes de caractères 
    séparées par des espaces et peuvent inclure des variables, des commandes substituées, des expansions 
    de paramètres, des redirections, des pipes, des opérateurs logiques, etc.

Il est important de noter que cet ordre de priorité peut être modifié en utilisant des parenthèses 
pour grouper des expressions et en utilisant des opérateurs logiques tels que "&&" et "||" pour 
contrôler l'ordre d'exécution des commandes.